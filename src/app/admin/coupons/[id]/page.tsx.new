import { Suspense } from 'react';
import { EditCouponForm } from './edit-form';
import connectDB from '@/lib/mongodb';
import { Store } from '@/models/Store';
import { Coupon } from '@/models/Coupon';

interface Props {
  params: {
    id: string;
  };
}

async function getData(id: string) {
  // No lado do servidor, fazemos a chamada direta para o modelo
  await connectDB();
  
  try {
    const coupon = await Coupon.findById(id).populate('store');
    const stores = await Store.find();
    
    if (!coupon) {
      throw new Error('Cupom não encontrado');
    }
    
    // Formata os dados para o formulário
    const formattedCoupon = {
      _id: coupon._id.toString(),
      title: coupon.title || '',
      description: coupon.description,
      code: coupon.code || '',
      url: coupon.url || '',
      store: typeof coupon.store === 'object' ? coupon.store._id.toString() : coupon.store.toString(),
      expiryDate: coupon.expiresAt ? new Date(coupon.expiresAt).toISOString().split('T')[0] : '',
      type: coupon.type || 'COUPON',
      active: coupon.active
    };
    
    return {
      coupon: formattedCoupon,
      stores: stores.map(store => ({
        _id: store._id.toString(),
        name: store.name
      }))
    };
  } catch (error) {
    console.error('Erro ao buscar dados:', error);
    throw error;
  }
}

export default async function Page({ params }: Props) {
  const data = await getData(params.id);
  
  return (
    <Suspense fallback={<div>Carregando...</div>}>
      <EditCouponForm coupon={data.coupon} stores={data.stores} />
    </Suspense>
  );
}
